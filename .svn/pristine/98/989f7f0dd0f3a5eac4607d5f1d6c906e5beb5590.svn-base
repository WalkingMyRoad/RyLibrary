package com.ist.rylibrary.base.util;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Locale;

/**
 * Created by minyuchun on 2017/3/16.
 */

public class TimeUtil {
    /**上一次红外检测的时间*/
    private long lastInfraredTime;
    /**上一次点击检测的时间*/
    private long lastClickTime;
    /**时间类实例*/
    private static TimeUtil mTimeUtil;
    /**获取时间类实例方法*/
    public static TimeUtil getInstance(){
        if(mTimeUtil == null){
            mTimeUtil = new TimeUtil();
        }
        return mTimeUtil;
    }

    /**
     * 判断是否少于给定的时间间隔
     * @param lessTime  时间间隔 单位（微秒）
     * @return  是否少于此时间间隔
     */
    public boolean isLessTimeInterval(int lessTime){
        return isLessTimeInterval(lessTime,lastInfraredTime);
    }

    /**
     * 是否少于时间间隔
     * @param lessTime  时间间隔
     * @param lastTime  上一次记录的时间
     * @return 是否时间间隔少于上次记录的时间
     */
    private boolean isLessTimeInterval(int lessTime,long lastTime){
        long currentTime = 0;
        try{
            Calendar calendar = Calendar.getInstance();
            currentTime = calendar.getTimeInMillis();
            if((currentTime - lastTime)<=lessTime){
                return true;
            }
        }catch (Exception e){
            e.printStackTrace();
        }finally {
            lastTime = currentTime;
        }
        return false;
    }

    /***
     * 是否是多次点击
     * @return  是否是多次点击
     */
    public boolean isMultipleClick(){
        return isLessTimeInterval(800,lastClickTime);
    }

    /**
     * 获取是上午还是下午
     * @return  返回是上午还是下午
     */
    public static int getPmAndAm() {
        GregorianCalendar ca = new GregorianCalendar();
        return ca.get(GregorianCalendar.AM_PM);
    }
    /**
     * 获取格式时间
     * @param formatTime  时间的格式
     * @return  返回格式时间
     */
    public String getFormatTime(String formatTime){
        SimpleDateFormat format = new SimpleDateFormat(formatTime, Locale.getDefault());
        return format.format(new Date());
    }
}
